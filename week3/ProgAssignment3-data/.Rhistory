outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
bestrow <- outcome2[outcome2[,3] == min(outcome2[,3])]
bestrow <- outcome2[outcome2[,3] == min(outcome2[,3]),]
bestrow
names(outcome)
outcome[,2]
bestrow
bestrow[1]
rm(list=ls())
source("best.R")
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
source("best.R")
source("best.R")
source("best.R")
best("TX", "heart attack")
best("bX", "heart attack")
best("TX", "heart attack")
a<-best("TX", "heart attack")
a
source("best.R")
a<-best("TX", "heart attack")
a
c(a)
a<-best("TX", "heart attack")
a
source("best.R")
a<-best("TX", "heart attack")
a
as.character(a)
source("best.R")
a<-best("TX", "heart attack")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
submit()
submit()
submit()
?order
rm(list=ls())
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
state <- "TX"
outcomeName <- "heart failure"
num <- 4
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
outcome.sub <- outcome[outcome[,7] == state, ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome2[order(outcome2[,3],outcome2[,3]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrows(outcome2)
}
## Return hospital name in that state with the given rank
## 30-day death rate
outcome2
outcome2[order(outcome2[,3],outcome2[,2])]
order(outcome2[,3],outcome2[,2])
outcome3 <- outcome2[order(outcome2[,3],outcome2[,2]),]
outcome3
c(outcome3[num,1])
state <- "TX"
outcomeName <- "heart failure"
num <- 4
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
outcome.sub <- outcome[outcome[,7] == state, ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,2]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrows(outcome2)
}
## Return hospital name in that state with the given rank
## 30-day death rate
c(outcome3[num,1])
outcome3
head(outcome3)
head(outcome2)
outcome2 <- outcome.sub3
head(outcome2)
outcome3 <- outcome2[order(outcome2[,3],outcome2[,2],outcome2[,1]),]
outcome3
head(outcome3)
c(outcome3[num,1])
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
?nrow
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
submit()
submit()
submit()
submit()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
## For each state, find the hospital of the given rank
}
rm(list=ls())
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
state <- outcome$State
## Read outcome data
#setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
## For each state, find the hospital of the given rank
state <- outcome$State
state
table(state)
?table
factor(state)
factor(state)[1]
state <- factor(outcome$State)
state[2]
state
factor(state)
?factor
?set
levels(state)
state <- levels(factor(outcome$State))
state
nrow(state)
length(state)
?data.frame
hospital <- c(seq(length(state)))
hospital
df <- data.frame(c(state),hospital,c(state),row.names=c("","hospital","state"))
df <- data.frame(c(state),hospital,c(state),col.names=c("","hospital","state"))
df
df <- data.frame(cbind(c(state),hospital,c(state)),col.names=c("","hospital","state"))
df
df <- data.frame(cbind(c(state),hospital,c(state)),
row.names = state,
col.names=c("","hospital","state"))
df
df <- data.frame(hospital,c(state)),row.names = state)
df <- data.frame(c(hospital,c(state)),row.names = state)
df <- data.frame(c(hospital,c(state)),row.names = c(state))
c(state)
df <- data.frame(c(hospital,c(state)),row.names = 2)
df <- data.frame(c(hospital,c(state)),row.names = hospital)
df <- data.frame(cbind(hospital,c(state)),row.names = state)
df
state <- levels(factor(outcome$State))
hospital <- c(seq(length(state)))
state <- c(state)
df <- data.frame(cbind(hospital,state),row.names = state)
df
i=1
outcome.sub <- outcome[outcome[,7] == state[i], ]
head(outcome.sub)
i=1
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome2)
}
i=1
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
head(outcome.sub2)
head(outcome)
head(outcome.sub2)
outcomeName <- "heart attack"
num <- 20
## Read outcome data
#setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
## For each state, find the hospital of the given rank
state <- levels(factor(outcome$State))
hospital <- c(seq(length(state)))
state <- c(state)
df <- data.frame(cbind(hospital,state),row.names = state)
i<-1
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
head(outcome.sub2)
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome3)
}
## Return hospital name in that state with the given rank
## 30-day death rate
as.character(c(outcome3[num,1]))
outcome3[num,1]
outcome2
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
outcome3
num
as.character(c(outcome3[num,1]))
df[1,2]
head(df)
source("rankall.R")
head(rankall("heart attack", 20), 10)
outcomeName <- "heart attack"
num <- 20
## Read outcome data
#setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! state %in% states ){
stop("invalid state")
}
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
## For each state, find the hospital of the given rank
state <- levels(factor(outcome$State))
hospital <- c(seq(length(state)))
state <- c(state)
df <- data.frame(cbind(hospital,state),row.names = state)
i=2
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome3)
}
as.character(c(outcome3[num,1]))
df[i,1] = as.character(c(outcome3[num,1]))
df[i,1] <- as.character(c(outcome3[num,1]))
as.character(c(outcome3[num,1]))
?c
c(outcome3[num,1])
df[i,1] <- c(outcome3[num,1])
df <- data.frame(cbind(hospital,state),row.names = state,stringsAsFactors=FALSE)
i=2
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome3)
}
## Return hospital name in that state with the given rank
## 30-day death rate
df[i,1] <- c(outcome3[num,1])
df[2,]
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
i=54
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
num="worst"
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome3)
}
num
outcome3
col_id <- 23
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
outcome.sub2
outcome.sub3
outcome2
outcome3
outcome3[num,1]
if(num == "best") {
num <- 1
}  else if (num == "worst"){
num <- nrow(outcome3)
}
num
num = "worst"
if(num == "best") {
num <- 1
}
if (num == "worst"){
num <- nrow(outcome3)
}
worst
num
outcome3[num,1]
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
outcomeName <- "pneumonia"
num <- "worst"
## Read outcome data
#setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Computing-for-Data-Analysis/week3/ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- outcome$State
diseases <- c("heart attack","heart failure","pneumonia")
## Check that state and outcome are valid
if (! outcomeName %in% diseases){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
col_id <- 0
if (outcomeName == diseases[1]){
col_id <- 11
} else if (outcomeName == diseases[2]) {
col_id <- 17
} else if (outcomeName == diseases[3]) {
col_id <- 23
}
## For each state, find the hospital of the given rank
state <- levels(factor(outcome$State))
hospital <- c(seq(length(state)))
state <- c(state)
df <- data.frame(cbind(hospital,state),row.names = state,stringsAsFactors=FALSE)
i=54
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}
if (num == "worst"){
num <- nrow(outcome3)
}
num
outcome3[num,1]
df
for (i in 1:length(state)){
outcome.sub <- outcome[outcome[,7] == state[i], ]
outcome.sub2 <- outcome.sub[,c(2,7,col_id)]
outcome.sub3 <- outcome.sub2[outcome.sub2[,3]!="Not Available",]
outcome.sub3[,3] <- as.numeric(outcome.sub3[,3])
outcome2 <- outcome.sub3
outcome3 <- outcome2[order(outcome2[,3],outcome2[,1],outcome2[,2]),]
if(num == "best") {
num <- 1
}
if (num == "worst"){
num <- nrow(outcome3)
}
## Return hospital name in that state with the given rank
## 30-day death rate
df[i,1] <- c(outcome3[num,1])
}
df
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
9
submit()
submit()
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
submit()
