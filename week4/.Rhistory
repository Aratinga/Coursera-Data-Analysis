x <- c(1.8, 3.14, 4, 88.169, 13)
g <- factor(rep(c(0, 1), c(2, 4)), levels = c(0, 1),labels = c("male", "female"))
summary(x)
summary(g)
class(x)
class(g)
summary
normsample <- function(n, ...) {
rval <- rnorm(n, ...)
class(rval) <- "normsample"
return(rval)
}
set.seed(123)
x <- normsample(10, mean = 5)
class(x)
summary.normsample <- function(object, ...) {
rval <- c(length(object), mean(object), sd(object))
names(rval) <- c("sample size","mean","standard deviation")
return(rval)
}
x
set.seed(123)
x <- normsample(10, mean = 5)
x
set.seed(123)
x <- normsample(10, mean = 5)
x
plot(x)
data("Journals")
library("AER")
data("Journals")
Journals$citeprice <- Journals$price/Journals$citations
attach(Journals)
plot(log(subs), log(citeprice))
rug(log(subs))
rug(log(citeprice), side = 2)
detach(Journals)
na.rm?
()
?na.rm
?rm.na
?na.rm()
??na.rm
??rm.na
?plot
require(stats)
plot(cars)
lines(lowess(cars))
plot(sin, -pi, 2*pi) # see ?plot.function
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
?lowess
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
?graphic
?pin
??pin
plot(log(subs) ~ log(citeprice), data = Journals, pch = 20,
col = "blue", ylim = c(0, 8), xlim = c(-7, 4),
main = "Library subscriptions")
plot(log(subs), log(citeprice))
attach(Journals)
plot(log(subs), log(citeprice))
plot(log(subs) ~ log(citeprice), data = Journals, pch = 20,
col = "blue", ylim = c(0, 8), xlim = c(-7, 4),
main = "Library subscriptions")
plot(log(subs), log(citeprice))
getwd()
demo("graphics")
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Data-Analysis/week4")
rm(list=ls())
setwd("/Users/oh_baizhima/Desktop/coursera/Coursera-Data-Analysis/week4")
homicides <- readLines("homicides.txt")
homicides[1]
homicides[1000]
?length
length(homicides[1])
grep("iconHomicideShooting",homicides)
length(grep("iconHomicideShooting",homicides))
length(grep("Cause: shooting",homicides))
length(grep("Cause: [Ss]hooting",homicides))
i <- grep("[cC]ause: [Ss]hooting", homicides)
j <- grep("[Ss]hooting",homicides)
str(i)
str(j)
?str
setdiff(i,j)
setdiff(j,i)
grep("^New",state.name)
grep("^New",state.name,value=TRUE)
regexpr("<dd>[F|f]ound(.*)</dd>",homicides)
options = c("asphyxiation","blunt force","other","shooting",
"stabbing", "unknown")
"asphyxiation" %in% options
?grep
source("count.R")
source("count.R")
count("other")
cause="other"
cause==NULL
?NULL
source("count.R")
source("count.R")
count("other")
homicides <- readLines("homicides.txt")
z <-grep("Cause: "+cause,homicides,ignore.case = TRUE)
?string
?append
??string
z <-grep(paste("Cause: ",cause),homicides,ignore.case = TRUE)
length(z)
paste("Cause: ",cause)
z <-grep(paste("Cause:",cause),homicides,ignore.case = TRUE)
length(z)
num <- count("unknown")
print(num)
source("count.R")
num <- count("unknown")
print(num)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit()
submit()
homicides <- readLines("homicides.txt")
homicides[1]
homicides[2]
homicides[3]
z <-regexec(", (.*?) years old",homicides,ignore.case = TRUE)
z
z[[1]]
?regexec
z <-regexec(", (.*?) years old",homicides,ignore.case = TRUE,values=TRUE)
z <-regexec(", (.*?) years old",homicides,ignore.case = TRUE,value=TRUE)
m <- regmatches(homicides, r)
m <- regmatches(homicides, z)
m
m[[1]]
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
m[[1]]
m[[1]][2]
m[[]][2] == 17
m[[]][2] == "17"
?find
?count
??match
m2 <- m[,2]
class(m)
m2 <- m[][2]
m2
m2 <- m[[]][2]
m2 <- m[[],2]
?list
m$2
m,m2 <- regmatches(homicides, z)
c(m,m2) <- regmatches(homicides, z)
m <- regmatches(homicides, z)
length(m)
m[[1]][2]
m[[1]][2]==17
source(agecount.R)
source("agecount.R")
agecount(3)
m[[5]][2]
m[5][2]
age=3
m[[i]][2] == age
i=1
m[[i]][2] == age
m
age=3
if(is.null(age)){
stop("error!")
}
## Read "homicides.txt" data file
homicides <- readLines("homicides.txt")
## Extract ages of victims; ignore records where no age is
## given
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
head(m)
m[1]
m[2]
m[1][1]
m[1][2]
m[[1]]
m[[[1]],2]
age=3
if(is.null(age)){
stop("error!")
}
## Read "homicides.txt" data file
homicides <- readLines("homicides.txt")
## Extract ages of victims; ignore records where no age is
## given
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
count <- 0
for (i in 1:length(m)){
s <- m[[i]][2]
if ( s == age)
{
count <- count + 1
}
}
s
NA == 3
i=1
s <- m[[i]][2]
s == age
count <- 0
for (i in 1:length(m)){
s <- m[[i]][2]
if ( s == age){
count <- count + 1
}
}
m
length(1250)
m[[1250]]
m[[1249]]
length(z)
m
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
m
age=3
if(is.null(age)){
stop("error!")
}
## Read "homicides.txt" data file
homicides <- readLines("homicides.txt")
## Extract ages of victims; ignore records where no age is
## given
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
count <- 0
m
z
z[150]
z[300]
1!=2
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
count <- 0
for (i in 1:length(m)){
if(z[[i]]!=-1){
s <- m[[i]][2]
if ( s == age){
count <- count + 1
}
}
}
count
warnings()
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
count <- 0
for (i in 1:length(m)){
if(z[[i]][1]!=-1){
s <- m[[i]][2]
if ( s == age){
count <- count + 1
}
}
}
count
source("agecount.R")
num <- agecount(21)
print(num)
agecount(3)
m
m <- m[!is.na(m)]
m
character(0)
?character(0)
m <- m[length(m)>0]
m
?as.vector
m2 <- as.vector(m)
m2
m2 <-m2[m2!=character(0)]
m2
m2 <-m2[length(m2)>0]
m2
?regmatches
m[[1]]
substr(m[[1]])
z
z2 <- z[z.attr(,"match.length")!=-1]
grep("17",m[[1]])
v <- grep("17",m[[1]])
v[2]
v <- grep("13",m[[1]])
v
length(v)
v <- grep("17",m[[1]])
length(v)
m[2]
ages <- sapply(m, function(x) x[2])
ages
grep(12,ages)
grep(17,ages)
length(grp(17,ages))
length(grep(17,ages))
source("agecount.R")
num <- agecount(21)
num
homicides[1000]
homicides[500]
homicides[501]
z2 <-regexec("Age: (.*?) years old",homicides,ignore.case = TRUE)
m2 <- regmatches(homicides, z)
ages2 <- sapply(m2, function(x) x[2])
n2 <- length(grep(age,ages2))
n2
age=21
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
ages <- sapply(m, function(x) x[2])
n1 <- length(grep(age,ages))
z2 <-regexec("Age: (.*?) years old",homicides,ignore.case = TRUE)
m2 <- regmatches(homicides, z)
ages2 <- sapply(m2, function(x) x[2])
n2 <- length(grep(age,ages2))
n1
n2
z2
m2
m2[1:200]
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
ages <- sapply(m, function(x) x[2])
n1 <- length(grep(age,ages))
z2 <-regexec("Age: (.*?) years old",homicides,ignore.case = TRUE)
m2 <- regmatches(homicides, z2)
ages2 <- sapply(m2, function(x) x[2])
n2 <- length(grep(age,ages2))
n1
n2
source("agecount.R")
num <- agecount(21)
num
agecount(3)
ages
age=3
ages[ages==age]
length(ages[ages==age])
age=3
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
ages <- sapply(m, function(x) x[2])
ages
ages2 <- age[age==3]
ages2
ages2<-0
age[age==3]
ages[ages==age]
?grep
z <-regexec("male, (.*?) years old",homicides,ignore.case = TRUE)
m <- regmatches(homicides, z)
ages <- sapply(m, function(x) x[2])
ages
which(ages==age)
which(ages==21)
source("agecount.R")
agecount(3)
num <- agecount(21)
num
submit()
5
submit()
